{"version":3,"file":"interactive.js","sources":["../../../../../src/components/hds/dropdown/list-item/interactive.hbs","../../../../../src/components/hds/dropdown/list-item/interactive.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<li class={{this.classNames}}>\\n  {{#if @isLoading}}\\n    <div class=\\\"hds-dropdown-list-item__interactive-loading-wrapper\\\" ...attributes>\\n      <div class=\\\"hds-dropdown-list-item__interactive-icon hds-dropdown-list-item__interactive-icon--leading\\\">\\n        <FlightIcon @name=\\\"loading\\\" @isInlineBlock={{false}} />\\n      </div>\\n      <Hds::Text::Body @tag=\\\"div\\\" @size=\\\"100\\\" @weight=\\\"regular\\\" class=\\\"hds-dropdown-list-item__interactive-text\\\">\\n        {{this.text}}\\n      </Hds::Text::Body>\\n    </div>\\n  {{else}}\\n    <Hds::Interactive\\n      @current-when={{@current-when}}\\n      @models={{hds-link-to-models @model @models}}\\n      @query={{hds-link-to-query @query}}\\n      @replace={{@replace}}\\n      @route={{@route}}\\n      @isRouteExternal={{@isRouteExternal}}\\n      @href={{@href}}\\n      @isHrefExternal={{@isHrefExternal}}\\n      ...attributes\\n    >\\n      {{#if @icon}}\\n        <span class=\\\"hds-dropdown-list-item__interactive-icon hds-dropdown-list-item__interactive-icon--leading\\\">\\n          <FlightIcon @name={{@icon}} @isInlineBlock={{false}} />\\n        </span>\\n      {{/if}}\\n      <Hds::Text::Body class=\\\"hds-dropdown-list-item__interactive-text\\\" @tag=\\\"span\\\" @size=\\\"200\\\" @weight=\\\"medium\\\">\\n        {{this.text}}\\n      </Hds::Text::Body>\\n      {{#if @trailingIcon}}\\n        <span class=\\\"hds-dropdown-list-item__interactive-icon hds-dropdown-list-item__interactive-icon--trailing\\\">\\n          <FlightIcon @name={{@trailingIcon}} @isInlineBlock={{false}} />\\n        </span>\\n      {{/if}}\\n    </Hds::Interactive>\\n  {{/if}}\\n</li>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\n\nimport { HdsDropdownListItemInteractiveColorValues } from './types.ts';\n\nimport type { FlightIconSignature } from '@hashicorp/ember-flight-icons/components/flight-icon';\nimport type { HdsInteractiveSignature } from '../../interactive';\nimport type { HdsDropdownListItemInteractiveColors } from './types.ts';\n\nexport const DEFAULT_COLOR = HdsDropdownListItemInteractiveColorValues.Action;\nexport const COLORS: string[] = Object.values(\n  HdsDropdownListItemInteractiveColorValues\n);\n\nexport interface HdsDropdownListItemInteractiveSignature {\n  Args: HdsInteractiveSignature['Args'] & {\n    color: HdsDropdownListItemInteractiveColors;\n    icon?: FlightIconSignature['Args']['name'];\n    isLoading?: boolean;\n    text: string;\n    trailingIcon?: FlightIconSignature['Args']['name'];\n  };\n  Element: HTMLDivElement | HdsInteractiveSignature['Element'];\n}\n\nexport default class HdsDropdownListItemInteractiveComponent extends Component<HdsDropdownListItemInteractiveSignature> {\n  /**\n   * @param text\n   * @type {string}\n   * @description The text of the item. If no text value is defined an error will be thrown\n   */\n  get text(): string {\n    const { text } = this.args;\n\n    assert(\n      '@text for \"Hds::Dropdown::ListItem::Interactive\" must have a valid value',\n      text !== undefined\n    );\n\n    return text;\n  }\n\n  /**\n   * @param color\n   * @type {string}\n   * @default primary\n   * @description Determines the color of the item (when item is set to interactive)\n   */\n  get color(): HdsDropdownListItemInteractiveColors {\n    const { color = DEFAULT_COLOR } = this.args;\n\n    assert(\n      `@color for \"Hds::Dropdown::ListItem::Interactive\" must be one of the following: ${COLORS.join(\n        ', '\n      )}; received: ${color}`,\n      COLORS.includes(color)\n    );\n\n    return color;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = [\n      'hds-dropdown-list-item',\n      'hds-dropdown-list-item--variant-interactive',\n    ];\n\n    // add a class based on the @color argument\n    classes.push(`hds-dropdown-list-item--color-${this.color}`);\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_COLOR","HdsDropdownListItemInteractiveColorValues","Action","COLORS","Object","values","HdsDropdownListItemInteractiveComponent","Component","text","args","assert","undefined","color","join","includes","classNames","classes","push","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;AACA,eAAe,kBAAkB,CAAC,moDAAmoD;;ACDrqD;AACA;AACA;AACA;;AAWaA,MAAAA,aAAa,GAAGC,yCAAyC,CAACC,OAAM;AACtE,MAAMC,MAAgB,GAAGC,MAAM,CAACC,MAAM,CAC3CJ,yCACF,EAAC;AAac,MAAMK,uCAAuC,SAASC,SAAS,CAA0C;AACtH;AACF;AACA;AACA;AACA;EACE,IAAIC,IAAIA,GAAW;IACjB,MAAM;AAAEA,MAAAA,IAAAA;KAAM,GAAG,IAAI,CAACC,IAAI,CAAA;AAE1BC,IAAAA,MAAM,CACJ,0EAA0E,EAC1EF,IAAI,KAAKG,SACX,CAAC,CAAA;AAED,IAAA,OAAOH,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAII,KAAKA,GAAyC;IAChD,MAAM;AAAEA,MAAAA,KAAK,GAAGZ,aAAAA;KAAe,GAAG,IAAI,CAACS,IAAI,CAAA;AAE3CC,IAAAA,MAAM,CACJ,CAAmFP,gFAAAA,EAAAA,MAAM,CAACU,IAAI,CAC5F,IACF,CAAC,CAAA,YAAA,EAAeD,KAAK,CAAA,CAAE,EACvBT,MAAM,CAACW,QAAQ,CAACF,KAAK,CACvB,CAAC,CAAA;AAED,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIG,UAAUA,GAAW;AACvB,IAAA,MAAMC,OAAO,GAAG,CACd,wBAAwB,EACxB,6CAA6C,CAC9C,CAAA;;AAED;IACAA,OAAO,CAACC,IAAI,CAAC,CAAA,8BAAA,EAAiC,IAAI,CAACL,KAAK,EAAE,CAAC,CAAA;AAE3D,IAAA,OAAOI,OAAO,CAACH,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AACF,CAAA;AAACK,oBAAA,CAAAC,QAAA,EApDoBb,uCAAuC,CAAA;;;;"}